(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();const M=[7,56,448,73,146,292,273,84],C=[1,2,4,8,16,32,64,128,256],O=511,y="",f="0",b="wins!",I="Cats game!",p={X:"X",O:"O"},u={X:"player-x-color",O:"player-o-color"},l={FIRST:5,SECOND:4},m={CLICK:"click"},L={DIV:"div"},o={SQUARE:"square",ALERT:"alert",BACKDROP:"backdrop",ALERT_MESSAGE:"alert-message",SCORE_MESSAGE:"score-message",DOT:"active-player-dot",MODE:"mode",GAME:"game"},S={RESET:"reset",NEW_GAME:"new-game",MODE:"mode-btn"},c={DISPLAY_BLOCK:"block",DISPLAY_NONE:"none"},P={BITS:"data-bits"},g={X:"x-turn",O:"o-turn"};class B{constructor(){this.bits=0}getBits(){return this.bits}addBits(e){this.bits+=e}resetBits(){this.bits=0}areWinningBits(e){for(let t of M)if((e&t)===t)return!0;return!1}areDrawnBits(e,t,s,r){const i=this.canStillWin(e,t),a=this.canStillWin(s,r);return!i&&!a}canStillWin(e,t){const s=~this.bits&O;return M.some(r=>{const i=r&~e,a=this.countRequiredMoves(i),h=(i&s)===i,d=a<=t;return h&&d})}countRequiredMoves(e){let t=0;for(;e;)t+=e&1,e>>=1;return t}}class v{constructor(e,t){this.message=e,this.isFinished=t}getMessage(){return this.message}getIsFinished(){return this.isFinished}}class E{constructor(e,t){this.bits=0,this.symbol=e,this.wins=0,this.availableMoves=t}getBits(){return this.bits}getSymbol(){return this.symbol}getWins(){return this.wins}getAvailableMoves(){return this.availableMoves}addBits(e){this.bits+=e}resetBits(){this.bits=0}incrementWins(){this.wins++}resetWins(){this.wins=0}decrementAvailableMoves(){this.availableMoves--}setAvailableMoves(e){this.availableMoves=e}}var A=(n=>(n.PvP="PvP",n.PvE="PvE",n))(A||{});class w{constructor(e){this.playerX=new E(p.X,l.FIRST),this.playerO=new E(p.O,l.SECOND),this.startingPlayer=this.playerX,this.currentPlayer=this.startingPlayer,this.board=new B,this.gameMode=A.PvP,this.ai=e}makeMove(e){return this.isCellOccupied(e)?this.currentPlayer.getSymbol():(this.board.addBits(e),this.currentPlayer.addBits(e),this.currentPlayer.decrementAvailableMoves(),this.currentPlayer.getSymbol())}makeAIMove(){return this.ai.getBestMove(this.playerX.getBits(),this.playerO.getBits())}hasGameFinished(){if(this.isGameWon()){this.currentPlayer.incrementWins();const e=`${this.currentPlayer.getSymbol()} ${b}`;return new v(e,!0)}return this.isGameDrawn()?new v(I,!0):new v(y,!1)}setGameMode(e){this.gameMode=e}isAgainstAI(){return this.gameMode===A.PvE}getCurrentPlayerSymbol(){return this.currentPlayer.getSymbol()}switchCurrentPlayer(){this.currentPlayer=this.currentPlayer===this.playerX?this.playerO:this.playerX}isCellOccupied(e){return(this.board.getBits()&e)!==0}getCurrentResult(){return`${this.playerX.getWins()}:${this.playerO.getWins()}`}startNewGame(){this.board.resetBits(),this.playerX.resetBits(),this.playerO.resetBits(),this.switchStartingPlayer(),this.currentPlayer=this.startingPlayer}resetGame(){this.board.resetBits(),this.playerX.resetBits(),this.playerO.resetBits(),this.playerX.resetWins(),this.playerO.resetWins(),this.playerX.setAvailableMoves(l.FIRST),this.playerO.setAvailableMoves(l.SECOND),this.startingPlayer=this.playerX,this.currentPlayer=this.startingPlayer}switchStartingPlayer(){this.startingPlayer=this.startingPlayer===this.playerX?this.playerO:this.playerX,this.startingPlayer===this.playerO?this.playerO.setAvailableMoves(l.FIRST):this.playerO.setAvailableMoves(l.SECOND),this.startingPlayer===this.playerX?this.playerX.setAvailableMoves(l.FIRST):this.playerX.setAvailableMoves(l.SECOND)}isGameWon(){const e=this.currentPlayer.getBits();return this.board.areWinningBits(e)}isGameDrawn(){const e=this.playerX.getBits(),t=this.playerX.getAvailableMoves(),s=this.playerO.getBits(),r=this.playerO.getAvailableMoves();return this.board.areDrawnBits(e,t,s,r)}}class T{getBestMove(e,t){let s=-1/0,r=0;const i=this.getAvailableMoves(e,t);for(const a of i){const h=t+a,d=this.minimax(e,h,!1);d>s&&(s=d,r=a)}return r}minimax(e,t,s){if(this.isWinner(t))return 1;if(this.isWinner(e))return-1;if(this.isDraw(e,t))return 0;const r=this.getAvailableMoves(e,t);let i=s?-1/0:1/0;for(const a of r)if(s){const h=this.minimax(e,t+a,!1);i=Math.max(h,i)}else{const h=this.minimax(e+a,t,!0);i=Math.min(h,i)}return i}getAvailableMoves(e,t){const s=e+t;return C.filter(r=>(s&r)===0)}isWinner(e){return M.some(t=>(e&t)===t)}isDraw(e,t){return e+t===O}}class R{constructor(e,t){this.game=e,this.ui=t,this.inputLocked=!1}onModeSelect(e){this.game.resetGame(),this.game.setGameMode(e),this.ui.showGame(),this.ui.displayScore(this.game.getCurrentResult()),this.ui.updateActivePlayer(this.game.getCurrentPlayerSymbol())}onCellClick(e){if(this.game.isCellOccupied(e))return;const t=this.game.makeMove(e);this.ui.updateCell(e,t);const s=this.game.hasGameFinished();if(s.getIsFinished()){this.ui.showResult(s.getMessage()),this.game.startNewGame(),this.ui.resetBoard(),this.ui.displayScore(this.game.getCurrentResult()),this.hasToMakeAIMove()&&this.makeAIMove(3500),this.ui.updateActivePlayer(this.game.getCurrentPlayerSymbol());return}this.game.switchCurrentPlayer(),this.ui.updateActivePlayer(this.game.getCurrentPlayerSymbol()),this.hasToMakeAIMove()&&this.makeAIMove(500)}onResetClick(){this.game.resetGame(),this.ui.resetBoard(),this.ui.displayScore(this.game.getCurrentResult()),this.ui.updateActivePlayer(this.game.getCurrentPlayerSymbol())}onNewGameClick(){this.onResetClick(),this.ui.showModeSelector()}isInputLocked(){return this.inputLocked}lockInput(){this.inputLocked=!0}unlockInput(){this.inputLocked=!1}hasToMakeAIMove(){return this.game.isAgainstAI()&&this.game.getCurrentPlayerSymbol()===p.O}makeAIMove(e){this.lockInput(),setTimeout(()=>{const t=this.game.makeAIMove();this.unlockInput(),this.onCellClick(t)},e)}}class G{updateCell(e,t){const s=document.querySelector(`[${P.BITS}="${e}"]`);s&&!s.innerHTML&&(s.textContent=t,s.classList.remove(u.X,u.O),s.classList.add(u[t]))}resetBoard(){document.querySelectorAll(`.${o.SQUARE}`).forEach(e=>{e.textContent=y,e.classList.remove(u.X,u.O)})}updateActivePlayer(e){const t=document.querySelector(`.${o.DOT}`);t&&(t.classList.remove(g.X,g.O),t.classList.add(e===p.X?g.X:g.O))}displayScore(e){const t=document.querySelector(`.${o.SCORE_MESSAGE}`);t&&(t.textContent=e)}showResult(e){const t=document.querySelector(`.${o.ALERT}`),s=document.querySelector(`.${o.BACKDROP}`);if(t&&s){const r=document.createElement(L.DIV);r.className=o.ALERT_MESSAGE,r.textContent=e,t.innerHTML=y,t.appendChild(r),t.style.display=c.DISPLAY_BLOCK,s.style.display=c.DISPLAY_BLOCK,setTimeout(()=>{t.style.display=c.DISPLAY_NONE,s.style.display=c.DISPLAY_NONE,t.innerHTML=y,s.innerHTML=y},3e3)}}showGame(){document.querySelector(`.${o.GAME}`).style.display=c.DISPLAY_BLOCK,document.querySelector(`.${o.MODE}`).style.display=c.DISPLAY_NONE}showModeSelector(){document.querySelector(`.${o.GAME}`).style.display=c.DISPLAY_NONE,document.querySelector(`.${o.MODE}`).style.display=c.DISPLAY_BLOCK}}class D{constructor(e){this.orchestrator=e}init(){this.initModeButtons(),this.initGameBoard(),this.initResetButton(),this.initNewGameButton()}initModeButtons(){document.querySelectorAll(`.${S.MODE}`).forEach(e=>{e.addEventListener(m.CLICK,t=>{const s=t.target.dataset.mode;this.orchestrator.onModeSelect(s)})})}initGameBoard(){document.querySelectorAll(`.${o.SQUARE}`).forEach(e=>{e.addEventListener(m.CLICK,()=>{if(this.orchestrator.isInputLocked())return;const t=parseInt(e.getAttribute(P.BITS)||f);this.orchestrator.onCellClick(t)})})}initResetButton(){var e;(e=document.querySelector(`.${S.RESET}`))==null||e.addEventListener(m.CLICK,()=>{this.orchestrator.onResetClick()})}initNewGameButton(){var e;(e=document.querySelector(`.${S.NEW_GAME}`))==null||e.addEventListener(m.CLICK,()=>{this.orchestrator.onNewGameClick()})}}const N=new T,X=new G,k=new w(N),W=new R(k,X),_=new D(W);_.init();
