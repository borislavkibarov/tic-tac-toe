(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();const A=[7,56,448,73,146,292,273,84],P=[1,2,4,8,16,32,64,128,256],E=511,y="",C="0",f="wins!",b="Cats game!",p={X:"X",O:"O"},u={X:"player-x-color",O:"player-o-color"},c={FIRST:5,SECOND:4},m={CLICK:"click"},L={DIV:"div"},n={SQUARE:"square",ALERT:"alert",BACKDROP:"backdrop",ALERT_MESSAGE:"alert-message",SCORE_MESSAGE:"score-message",DOT:"active-player-dot",MODE:"mode",GAME:"game",AI_INDICATOR:"ai-indicator"},g={RESET:"reset",NEW_GAME:"new-game",MODE:"mode-btn"},l={DISPLAY_BLOCK:"block",DISPLAY_NONE:"none",DISPLAY_FLEX:"flex"},O={BITS:"data-bits"},S={X:"x-turn",O:"o-turn"};class B{constructor(){this.bits=0}getBits(){return this.bits}addBits(e){this.bits+=e}resetBits(){this.bits=0}areWinningBits(e){for(let t of A)if((e&t)===t)return!0;return!1}areDrawnBits(e,t,s,i){const r=this.canStillWin(e,t),a=this.canStillWin(s,i);return!r&&!a}canStillWin(e,t){const s=~this.bits&E;return A.some(i=>{const r=i&~e,a=this.countRequiredMoves(r),h=(r&s)===r,d=a<=t;return h&&d})}countRequiredMoves(e){let t=0;for(;e;)t+=e&1,e>>=1;return t}}class v{constructor(e,t){this.message=e,this.isFinished=t}getMessage(){return this.message}getIsFinished(){return this.isFinished}}class I{constructor(e,t){this.bits=0,this.symbol=e,this.wins=0,this.availableMoves=t}getBits(){return this.bits}getSymbol(){return this.symbol}getWins(){return this.wins}getAvailableMoves(){return this.availableMoves}addBits(e){this.bits+=e}resetBits(){this.bits=0}incrementWins(){this.wins++}resetWins(){this.wins=0}decrementAvailableMoves(){this.availableMoves--}setAvailableMoves(e){this.availableMoves=e}}var M=(o=>(o.PvP="PvP",o.PvE="PvE",o))(M||{});class T{constructor(e){this.playerX=new I(p.X,c.FIRST),this.playerO=new I(p.O,c.SECOND),this.startingPlayer=this.playerX,this.currentPlayer=this.startingPlayer,this.board=new B,this.gameMode=M.PvP,this.ai=e}makeMove(e){return this.isCellOccupied(e)?this.currentPlayer.getSymbol():(this.board.addBits(e),this.currentPlayer.addBits(e),this.currentPlayer.decrementAvailableMoves(),this.currentPlayer.getSymbol())}makeAIMove(){return this.ai.getBestMove(this.playerX.getBits(),this.playerO.getBits())}hasGameFinished(){if(this.isGameWon()){this.currentPlayer.incrementWins();const e=`${this.currentPlayer.getSymbol()} ${f}`;return new v(e,!0)}return this.isGameDrawn()?new v(b,!0):new v(y,!1)}setGameMode(e){this.gameMode=e}isAgainstAI(){return this.gameMode===M.PvE}getCurrentPlayerSymbol(){return this.currentPlayer.getSymbol()}switchCurrentPlayer(){this.currentPlayer=this.currentPlayer===this.playerX?this.playerO:this.playerX}isCellOccupied(e){return(this.board.getBits()&e)!==0}getCurrentResult(){return`${this.playerX.getWins()}:${this.playerO.getWins()}`}startNewGame(){this.board.resetBits(),this.playerX.resetBits(),this.playerO.resetBits(),this.switchStartingPlayer(),this.currentPlayer=this.startingPlayer}resetGame(){this.board.resetBits(),this.playerX.resetBits(),this.playerO.resetBits(),this.playerX.resetWins(),this.playerO.resetWins(),this.playerX.setAvailableMoves(c.FIRST),this.playerO.setAvailableMoves(c.SECOND),this.startingPlayer=this.playerX,this.currentPlayer=this.startingPlayer}switchStartingPlayer(){this.startingPlayer=this.startingPlayer===this.playerX?this.playerO:this.playerX,this.startingPlayer===this.playerO?this.playerO.setAvailableMoves(c.FIRST):this.playerO.setAvailableMoves(c.SECOND),this.startingPlayer===this.playerX?this.playerX.setAvailableMoves(c.FIRST):this.playerX.setAvailableMoves(c.SECOND)}isGameWon(){const e=this.currentPlayer.getBits();return this.board.areWinningBits(e)}isGameDrawn(){const e=this.playerX.getBits(),t=this.playerX.getAvailableMoves(),s=this.playerO.getBits(),i=this.playerO.getAvailableMoves();return this.board.areDrawnBits(e,t,s,i)}}class w{getBestMove(e,t){let s=-1/0,i=0;const r=this.getAvailableMoves(e,t);for(const a of r){const h=t+a,d=this.minimax(e,h,!1);d>s&&(s=d,i=a)}return i}minimax(e,t,s){if(this.isWinner(t))return 1;if(this.isWinner(e))return-1;if(this.isDraw(e,t))return 0;const i=this.getAvailableMoves(e,t);let r=s?-1/0:1/0;for(const a of i)if(s){const h=this.minimax(e,t+a,!1);r=Math.max(h,r)}else{const h=this.minimax(e+a,t,!0);r=Math.min(h,r)}return r}getAvailableMoves(e,t){const s=e+t;return P.filter(i=>(s&i)===0)}isWinner(e){return A.some(t=>(e&t)===t)}isDraw(e,t){return e+t===E}}class R{constructor(e,t){this.game=e,this.ui=t,this.inputLocked=!1}onModeSelect(e){this.game.resetGame(),this.game.setGameMode(e),this.ui.showGame(),this.ui.displayScore(this.game.getCurrentResult()),this.ui.updateActivePlayer(this.game.getCurrentPlayerSymbol())}onCellClick(e){if(this.game.isCellOccupied(e))return;const t=this.game.makeMove(e);this.ui.updateCell(e,t);const s=this.game.hasGameFinished();if(s.getIsFinished()){this.ui.showResult(s.getMessage()),this.game.startNewGame(),this.ui.resetBoard(),this.ui.displayScore(this.game.getCurrentResult()),this.hasToMakeAIMove()&&this.makeAIMove(3500),this.ui.updateActivePlayer(this.game.getCurrentPlayerSymbol());return}this.game.switchCurrentPlayer(),this.ui.updateActivePlayer(this.game.getCurrentPlayerSymbol()),this.hasToMakeAIMove()&&this.makeAIMove(500)}onResetClick(){this.game.resetGame(),this.ui.resetBoard(),this.ui.displayScore(this.game.getCurrentResult()),this.ui.updateActivePlayer(this.game.getCurrentPlayerSymbol())}onNewGameClick(){this.onResetClick(),this.ui.showModeSelector()}isInputLocked(){return this.inputLocked}lockInput(){this.inputLocked=!0}unlockInput(){this.inputLocked=!1}hasToMakeAIMove(){return this.game.isAgainstAI()&&this.game.getCurrentPlayerSymbol()===p.O}makeAIMove(e){this.lockInput(),this.ui.showAIIndicator(),setTimeout(()=>{const t=this.game.makeAIMove();this.unlockInput(),this.ui.hideAIIndicator(),this.onCellClick(t)},e)}}class D{updateCell(e,t){const s=document.querySelector(`[${O.BITS}="${e}"]`);s&&!s.innerHTML&&(s.textContent=t,s.classList.remove(u.X,u.O),s.classList.add(u[t]))}resetBoard(){document.querySelectorAll(`.${n.SQUARE}`).forEach(e=>{e.textContent=y,e.classList.remove(u.X,u.O)})}updateActivePlayer(e){const t=document.querySelector(`.${n.DOT}`);t&&(t.classList.remove(S.X,S.O),t.classList.add(e===p.X?S.X:S.O))}displayScore(e){const t=document.querySelector(`.${n.SCORE_MESSAGE}`);t&&(t.textContent=e)}showResult(e){const t=document.querySelector(`.${n.ALERT}`),s=document.querySelector(`.${n.BACKDROP}`);if(t&&s){const i=document.createElement(L.DIV);i.className=n.ALERT_MESSAGE,i.textContent=e,t.innerHTML=y,t.appendChild(i),t.style.display=l.DISPLAY_BLOCK,s.style.display=l.DISPLAY_BLOCK,setTimeout(()=>{t.style.display=l.DISPLAY_NONE,s.style.display=l.DISPLAY_NONE,t.innerHTML=y,s.innerHTML=y},3e3)}}showGame(){document.querySelector(`.${n.GAME}`).style.display=l.DISPLAY_BLOCK,document.querySelector(`.${n.MODE}`).style.display=l.DISPLAY_NONE}showModeSelector(){document.querySelector(`.${n.GAME}`).style.display=l.DISPLAY_NONE,document.querySelector(`.${n.MODE}`).style.display=l.DISPLAY_BLOCK}showAIIndicator(){const e=document.querySelector(`.${n.AI_INDICATOR}`);e&&(e.style.display=l.DISPLAY_FLEX)}hideAIIndicator(){const e=document.querySelector(`.${n.AI_INDICATOR}`);e&&(e.style.display=l.DISPLAY_NONE)}}class N{constructor(e){this.orchestrator=e}init(){this.initModeButtons(),this.initGameBoard(),this.initResetButton(),this.initNewGameButton()}initModeButtons(){document.querySelectorAll(`.${g.MODE}`).forEach(e=>{e.addEventListener(m.CLICK,t=>{const s=t.target.dataset.mode;this.orchestrator.onModeSelect(s)})})}initGameBoard(){document.querySelectorAll(`.${n.SQUARE}`).forEach(e=>{e.addEventListener(m.CLICK,()=>{if(this.orchestrator.isInputLocked())return;const t=parseInt(e.getAttribute(O.BITS)||C);this.orchestrator.onCellClick(t)})})}initResetButton(){var e;(e=document.querySelector(`.${g.RESET}`))==null||e.addEventListener(m.CLICK,()=>{this.orchestrator.onResetClick()})}initNewGameButton(){var e;(e=document.querySelector(`.${g.NEW_GAME}`))==null||e.addEventListener(m.CLICK,()=>{this.orchestrator.onNewGameClick()})}}const G=new w,X=new D,_=new T(G),k=new R(_,X),W=new N(k);W.init();
